name: 'Terraform Deployment and Docker Push'
on:
  push:
    branches: [ main, master ]
    paths:
      - '*.tf'
      - '.github/workflows/terraform_action.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - '*.tf'
  workflow_dispatch:
    inputs:
      destroy:
        type: boolean
        description: 'Destroy infrastructure'
        default: false
      environment:
        type: choice
        description: 'Select environment'
        options:
          - dev
          - prod
        default: 'dev'

jobs:
  terraform:
    uses: clouddrove/github-shared-workflows/.github/workflows/terraform_workflow.yml@master
    with:
      working_directory: '.'  # Root directory since terraform files are in root
      provider: 'aws'
      aws_region: 'us-east-1'
      timeout: 5
      approvers: ruchit-sharma09
      destroy: true
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  docker_build_push:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up AWS credentials for Docker
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: 'us-east-1'

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}

      # Build the Docker image from the project folder
      - name: Build Docker image
        run: |
          docker build -t my-project-image ./nodejs-docker-example

      # Tag the Docker image
      - name: Tag Docker image
        run: |
          docker tag my-project-image:latest ${{ secrets.ECR_REPOSITORY_URL }}:latest

      # Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URL }}:latest
